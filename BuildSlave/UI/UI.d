/*
    Generated by Entice Designer
    Entice Designer written by Christopher E. Miller
    www.dprogramming.com/entice.php
*/
module BuildSlave.UI.UI;

import std.string;
import std.variant;
import org.eclipse.swt.SWT;
import org.eclipse.swt.widgets.Display;
import org.eclipse.swt.widgets.Shell;
import org.eclipse.swt.widgets.TabFolder;
import org.eclipse.swt.widgets.TabItem;
import org.eclipse.swt.widgets.Composite;
import org.eclipse.swt.layout.FillLayout;
import BuildSlave.Config;
import BuildSlave.UI.Base;
import BuildSlave.UI.Build;
import BuildSlave.UI.DataPrepare;


class UIShell
{
    this()
    {
    }

    static int Show()
    {
        auto display = new Display;
        auto shell = new Shell(display);
        shell.setLayout(new FillLayout());
        shell.setText("BuildSlave");
        //shell.setBounds(0, 0, 800, 400);
        auto tabFolder = new TabFolder(shell, SWT.TOP);
        //tabFolder.setBounds(4, 4, 784, 364);

        string[] tabs = [ "Build", "Data Prepare" ];
        auto tabTypes = [typeid(UIBuild), typeid(UIDataPrepare)];
        auto showTabs = split(Config.GetVariableOrDefaultValue("ShowTabs", ""), ",");
        if(showTabs.length == 0)
        {
            showTabs = tabs;
        }

        foreach (tab; showTabs)
        {
            UIBase ui = CreateUIType(tab, tabFolder);
            if(ui !is null)
            {
                TabItem tabItem = new TabItem(tabFolder, SWT.NONE);
                tabItem.setText(tab);
                //Composite container = new Composite(tabFolder, SWT.NONE);
                tabItem.setControl(ui);
                ui.preInitialize();
                ui.initialize();
                //ui.initialize(container);
            }
        }

        tabFolder.layout();
        shell.layout();

        tabFolder.pack();
        shell.pack();

        shell.open();

        UpdateActiveTab(tabFolder);

        while (!shell.isDisposed)
            if (!display.readAndDispatch())
                display.sleep();

        display.dispose();

        return 0;
    }

    static void UpdateActiveTab(TabFolder tabFolder)
    {
        TabItem tabItem = tabFolder.getSelection()[0];
        UIBase ui = cast(UIBase)tabItem.getControl();
        //ui.preInitialize();
        //ui.initialize();
        ui.postInitialize();
    }

    static UIBase CreateUIType(string typename, Composite parent)
    {
        if(typename == "Build")
            return new UIBuild(parent);
        if(typename == "Data Prepare")
            return new UIDataPrepare(parent);
        return null;
    }
}

