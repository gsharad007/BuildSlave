/*
    Generated by Entice Designer
    Entice Designer written by Christopher E. Miller
    www.dprogramming.com/entice.php
*/
module BuildSlave.UI.UI;

import std.string;
import std.variant;
import org.eclipse.swt.SWT;
import org.eclipse.swt.widgets.Display;
import org.eclipse.swt.widgets.Shell;
import org.eclipse.swt.widgets.TabFolder;
import org.eclipse.swt.widgets.TabItem;
import org.eclipse.swt.widgets.Composite;
import org.eclipse.swt.layout.FillLayout;
import org.eclipse.swt.custom.SashForm;
import BuildSlave.Config;
import BuildSlave.UI.Base;
import BuildSlave.UI.Status;
import BuildSlave.UI.Build;
import BuildSlave.UI.DataPrepare;


class UIShell
{
    //TabFolder tabFolderUtils;
    //UIStatus tabFolderStatus;

    this()
    {
    }

    static int Show()
    {
        auto display = new Display;
        auto shell = new Shell(display,SWT.SHELL_TRIM|SWT.PRIMARY_MODAL);
        shell.setLayout(new FillLayout());
        shell.setText("BuildSlave");
        //shell.setBounds(0, 0, 800, 400);
        //shell.setBackground(display.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND));
        //shell.setBackgroundMode(SWT.INHERIT_DEFAULT);

        //{
            SashForm sashFormLevel_1 = new SashForm(shell, SWT.VERTICAL);

            auto tabFolderUtils = new TabFolder(sashFormLevel_1, SWT.TOP);
            //tabFolder.setBounds(4, 4, 784, 364);

            auto uiStatus = new UIStatus(sashFormLevel_1);
            UIStatus.get().preInitialize();
            UIStatus.get().initialize();
            UIBase.AllLog   = UIStatus.get().addStatus("Log");
            UIBase.ErrorLog = UIStatus.get().addStatus("Error");

            sashFormLevel_1.setWeights([3,1]);

            string[] tabs = [ "Build", "Data Prepare" ];
            auto tabTypes = [typeid(UIBuild), typeid(UIDataPrepare)];
            auto showTabs = split(Config.GetVariableOrDefaultValue("ShowTabs", ""), ",");
            if(showTabs.length == 0)
            {
                showTabs = tabs;
            }

            foreach (tab; showTabs)
            {
                UIBase ui = CreateUIType(tab, tabFolderUtils);
                if(ui !is null)
                {
                    TabItem tabItem = new TabItem(tabFolderUtils, SWT.NONE);
                    tabItem.setText(tab);
                    //Composite container = new Composite(tabFolderUtils, SWT.NONE);
                    tabItem.setControl(ui);
                    ui.preInitialize();
                    ui.initialize();
                    //ui.initialize(container);
                }
            }

            tabFolderUtils.layout();
            tabFolderUtils.pack();
        //}

        shell.layout();
        shell.pack();

        shell.open();

        UIStatus.get().postInitialize();

        UpdateActiveTab(tabFolderUtils);

        while (!shell.isDisposed)
            if (!display.readAndDispatch())
                display.sleep();

        display.dispose();

        return 0;
    }

    static void UpdateActiveTab(TabFolder tabFolder)
    {
        TabItem tabItem = tabFolder.getSelection()[0];
        UIBase ui = cast(UIBase)tabItem.getControl();
        //ui.preInitialize();
        //ui.initialize();
        ui.postInitialize();
    }

    static UIBase CreateUIType(string typename, Composite parent)
    {
        if(typename == "Build")
            return new UIBuild(parent);
        if(typename == "Data Prepare")
            return new UIDataPrepare(parent);
        return null;
    }
}

